package org.mm3.data;

import org.mm3.model.MM3DataPacket;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import static org.testng.Assert.*;

/**
 * Created by CowbyJim on 7/8/15.
 */
public class MM3StreamParserTest {

    final byte testData[] =
            {(byte) 0x3f, (byte) 0x0a, (byte) 0x0d, (byte) 0x3f, (byte) 0x31, (byte) 0x32, (byte) 0x33, (byte) 0x34, (byte) 0x35, (byte) 0x36, (byte) 0x37, (byte) 0x0a, (byte) 0x0d, (byte) 0x53, (byte) 0x79, (byte) 0x73,
                    (byte) 0x74, (byte) 0x65, (byte) 0x6d, (byte) 0x20, (byte) 0x75, (byte) 0x70, (byte) 0x0a, (byte) 0x0d, (byte) 0x05, (byte) 0x27, (byte) 0x5b, (byte) 0x04, (byte) 0x01, (byte) 0x60, (byte) 0x03, (byte) 0x01,
                    (byte) 0x00, (byte) 0x00, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0x06, (byte) 0x02, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x04,
                    (byte) 0x00, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0x06, (byte) 0x02, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x0a,
                    (byte) 0x27, (byte) 0x3e, (byte) 0x04, (byte) 0x02, (byte) 0x60, (byte) 0x03, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0x08, (byte) 0x06, (byte) 0x04, (byte) 0x01,
                    (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0x08, (byte) 0x06, (byte) 0x04, (byte) 0x01, (byte) 0x01,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x05, (byte) 0x27, (byte) 0x40, (byte) 0x04, (byte) 0x03, (byte) 0x60, (byte) 0x03, (byte) 0x03, (byte) 0x00, (byte) 0x00,
                    (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0x08, (byte) 0x06, (byte) 0x04, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xff,
                    (byte) 0xff, (byte) 0xff, (byte) 0x08, (byte) 0x06, (byte) 0x04, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x0a, (byte) 0x27, (byte) 0xf8,
                    (byte) 0x04, (byte) 0x04, (byte) 0x60, (byte) 0x03, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x05, (byte) 0x27, (byte) 0xfa, (byte) 0x04, (byte) 0x05, (byte) 0x61, (byte) 0x03, (byte) 0x05, (byte) 0x00, (byte) 0x00, (byte) 0xff, (byte) 0x24,
                    (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x0a, (byte) 0x27, (byte) 0xf3, (byte) 0x04, (byte) 0x06,
                    (byte) 0x61, (byte) 0x03, (byte) 0x06, (byte) 0x00, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x02, (byte) 0x05, (byte) 0x27, (byte) 0xf6, (byte) 0x04, (byte) 0x07, (byte) 0x61, (byte) 0x03, (byte) 0x07, (byte) 0x00, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xff, (byte) 0x24, (byte) 0x0d, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x0a, (byte) 0x27, (byte) 0xfd, (byte) 0x04, (byte) 0x00, (byte) 0x61, (byte) 0x03,
                    (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x02, (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02,
                    (byte) 0x05, (byte) 0x27, (byte) 0x00, (byte) 0x04, (byte) 0x01, (byte) 0x61, (byte) 0x03, (byte) 0x09, (byte) 0x00, (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01,
                    (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x0a, (byte) 0x27, (byte) 0xf9, (byte) 0x04, (byte) 0x02, (byte) 0x61, (byte) 0x03, (byte) 0x0a, (byte) 0x00,
                    (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00,
                    (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x05, (byte) 0x27,
                    (byte) 0xfc, (byte) 0x04, (byte) 0x03, (byte) 0x61, (byte) 0x03, (byte) 0x0b, (byte) 0x00, (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x2b, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x0a, (byte) 0x27, (byte) 0x41, (byte) 0x04, (byte) 0x04, (byte) 0x61, (byte) 0x03, (byte) 0x0c, (byte) 0x00, (byte) 0x00, (byte) 0x06,
                    (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x06, (byte) 0x01,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x05, (byte) 0x27, (byte) 0x44, (byte) 0x04,
                    (byte) 0x05, (byte) 0x61, (byte) 0x03, (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x06, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x0a, (byte) 0x27, (byte) 0x3d, (byte) 0x04, (byte) 0x06, (byte) 0x61, (byte) 0x03, (byte) 0x0e, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x01, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x06, (byte) 0x01, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x05, (byte) 0x27, (byte) 0x40, (byte) 0x04, (byte) 0x07, (byte) 0x61};
    final byte singleDataPacket[] = new byte[]{0x05, (byte) 0x27, (byte) 0x93, (byte) 0x04, (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x1C, (byte) 0x60, (byte) 0x9A,
            (byte) 0xB3, (byte) 0xCC, (byte) 0xE9, (byte) 0xff, (byte) 0xff, (byte) 0xF1, (byte) 0xD8, (byte) 0xBF, (byte) 0x9A,
            0x60, (byte) 0x19, (byte) 0x03, (byte) 0x1C, (byte) 0x60, (byte) 0x9A, (byte) 0xB3, (byte) 0xCC, (byte) 0xE9, (byte) 0xff, (byte) 0xff, (byte) 0xF1,
            (byte) 0xD8, (byte) 0xBF, (byte) 0x9A, (byte) 0x60, (byte) 0x19};
    protected MM3StreamParser MM3StreamParser;
    protected PacketListener listener;

    @BeforeMethod
    public void setUp() throws Exception {
        MM3StreamParser = new MM3StreamParser();
        listener = new PacketListener();
        MM3StreamParser.setPacketListener(listener);
    }

    @Test
    public void testBytesReceived() throws Exception {

        for (int i = 0; i < testData.length; i++) {
            byte singleByteArray[] = new byte[1];
            singleByteArray[0] = testData[i];
            MM3StreamParser.parseData(singleByteArray);
        }
        assertEquals(listener.count, 14);
    }


    class PacketListener implements MM3PacketListener {

        public int count;

        @Override
        public void packetReceived(MM3DataPacket packet) {
            count++;

            System.out.println("packet received");
           // super.packetReceived(packet);    //To change body of overridden methods use File | Settings | File Templates.
        }
    }
}